swagger: "2.0"
info:
  title: pt backend
  version: "1.0"
  contact:
    name: pt backend authentication service
    url: https://pt-backend.rdeid.unil.ch
    email: development.bdsc@chuv.ch
tags:
  - name: AuthenticationService
  - name: ConfigService
  - name: DatasetService
  - name: IndexService
  - name: UserService
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/rest/v1/authentication/login:
    post:
      summary: Authenticate
      description: This endpoint authenticates a user
      operationId: AuthenticationService_Authenticate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendAuthenticationReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendCredentials'
      tags:
        - Authentication
      x-openapi-router-controller: authentication_controller
  /api/rest/v1/configs/{id}:
    get:
      summary: Get a configuration file
      description: This endpoint returns a configuration file for a given user
      operationId: ConfigService_GetConfig
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetConfigReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Configuration
      x-openapi-router-controller: config_generator_controller
  /api/rest/v1/users:
    post:
      summary: Create a user
      description: This endpoint creates a user
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendUser'
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/me:
    get:
      summary: Get my own user
      description: This endpoint returns the details of the authenticated user
      operationId: UserService_GetUserMe
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetUserMeReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/me/password:
    put:
      summary: Update password
      description: This endpoint updates the password of the authenticated user
      operationId: UserService_UpdatePassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendUpdatePasswordReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendUpdatePasswordRequest'
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/{id}:
    get:
      summary: Get a user
      description: This endpoint returns a user
      operationId: UserService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Users
      x-openapi-router-controller: user_controller
    delete:
      summary: Delete a user
      description: This endpoint deletes a user
      operationId: UserService_DeleteUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendDeleteUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/{id}/password/reset:
    post:
      summary: Reset password
      description: This endpoint resets a user's password
      operationId: UserService_ResetPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendResetPasswordReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - Users
      x-openapi-router-controller: user_controller
  /api/v1/dataset:
    get:
      summary: List datasets
      description: This endpoint allows listing a user's datasets
      operationId: DatasetService_ListDatasets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendListDatasetsReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
        - name: limit
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Dataset
      x-openapi-router-controller: dataset_controller
    post:
      summary: Store a dataset
      description: This endpoint stores a dataset
      operationId: DatasetService_StoreDataset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendStoreDatasetReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendStoreDatasetRequest'
      tags:
        - Dataset
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/content/{id}:
    get:
      summary: Get Dataset Content
      description: This endpoint allow getting a specific user's Dataset Content
      operationId: DatasetService_GetDatasetContent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetDatasetContentReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Dataset
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/metadata/{id}:
    get:
      summary: Get Dataset Metadata
      description: This endpoint allow getting a specific user's Dataset Metadata
      operationId: DatasetService_GetDatasetMetadata
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetDatasetMetadataReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Dataset
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/{id}:
    delete:
      summary: Deletes a dataset
      description: This endpoint deletes a dataset
      operationId: DatasetService_DeleteDataset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendDeleteDatasetReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Dataset
      x-openapi-router-controller: dataset_controller
  /api/v1/hello:
    get:
      summary: Get a hello
      description: This endpoint returns a hello
      operationId: IndexService_GetHello
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetHelloReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Index
      x-openapi-router-controller: index_controller
  /api/v1/hello/{identifier}:
    post:
      summary: Get a hello
      description: This endpoint returns a hello
      operationId: IndexService_CreateHello
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateHelloReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: identifier
          in: path
          required: true
          type: integer
          format: int32
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              content:
                type: string
      tags:
        - Index
      x-openapi-router-controller: index_controller
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  templatebackendAuthenticationReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendAuthenticationResult'
  templatebackendAuthenticationResult:
    type: object
    properties:
      token:
        type: string
  templatebackendColumn:
    type: object
    properties:
      value:
        type: array
        items:
          type: string
  templatebackendConfig:
    type: object
    properties:
      id:
        type: integer
        format: int64
      questionnaireid:
        type: integer
        format: int64
      hasScrambleField:
        type: boolean
      hasDateShift:
        type: boolean
      hassubFieldList:
        type: boolean
      hassubFieldRegex:
        type: boolean
      scrambleFieldFields:
        type: array
        items:
          type: string
      dateShiftLowrange:
        type: integer
        format: int32
      dateShiftHighrange:
        type: integer
        format: int32
      subFieldListFields:
        type: array
        items:
          type: string
      subFieldListSubstitute:
        type: array
        items:
          type: string
      subFieldListReplacement:
        type: string
      subFieldRegexFields:
        type: array
        items:
          type: string
      subFieldRegexRegex:
        type: string
      subFieldRegexReplacement:
        type: string
      createdAt:
        type: string
        format: date-time
  templatebackendCreateHelloReply:
    type: object
    properties:
      identifier:
        type: integer
        format: int32
      title:
        type: string
      content:
        type: string
  templatebackendCreateUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendCreateUserResult'
    title: Create Users
  templatebackendCreateUserResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendCredentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      totp:
        type: string
  templatebackendDataset:
    type: object
    properties:
      id:
        type: integer
        format: int64
      userid:
        type: integer
        format: int64
      tenantid:
        type: integer
        format: int64
      datasetName:
        type: string
      createdAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
  templatebackendDeleteDatasetReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendDeleteDatasetResult'
  templatebackendDeleteDatasetResult:
    type: object
    properties:
      success:
        type: boolean
  templatebackendDeleteUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendDeleteUserResult'
  templatebackendDeleteUserResult:
    type: object
  templatebackendGetConfigReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetConfigResult'
  templatebackendGetConfigResult:
    type: object
    properties:
      config:
        $ref: '#/definitions/templatebackendConfig'
  templatebackendGetDatasetContentReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetDatasetContentResult'
  templatebackendGetDatasetContentResult:
    type: object
    properties:
      columns:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendColumn'
  templatebackendGetDatasetMetadataReply:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/templatebackendGetDatasetMetadataResult'
  templatebackendGetDatasetMetadataResult:
    type: object
    properties:
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendMetadata'
  templatebackendGetHelloReply:
    type: object
    properties:
      content:
        type: string
  templatebackendGetUserMeReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetUserMeResult'
  templatebackendGetUserMeResult:
    type: object
    properties:
      me:
        $ref: '#/definitions/templatebackendUser'
    title: Get User (me)
  templatebackendGetUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetUserResult'
  templatebackendGetUserResult:
    type: object
    properties:
      user:
        $ref: '#/definitions/templatebackendUser'
  templatebackendListDatasetsReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendListDatasetsResult'
  templatebackendListDatasetsResult:
    type: object
    properties:
      Datasets:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendDataset'
  templatebackendMetadata:
    type: object
    properties:
      userid:
        type: integer
        format: int64
      tenantid:
        type: integer
        format: int64
      datasetId:
        type: integer
        format: int64
      columnId:
        type: integer
        format: int64
      columnName:
        type: string
      type:
        type: string
  templatebackendResetPasswordReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendResetPasswordResult'
  templatebackendResetPasswordResult:
    type: object
  templatebackendStoreDatasetReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendStoreDatasetResult'
  templatebackendStoreDatasetRequest:
    type: object
    properties:
      datasetName:
        type: string
      dataset:
        type: string
      types:
        type: string
    title: Create a Dataset
  templatebackendStoreDatasetResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendUpdatePasswordReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendUpdateUserResult'
  templatebackendUpdatePasswordRequest:
    type: object
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    title: Update User Password
  templatebackendUpdateUserResult:
    type: object
  templatebackendUser:
    type: object
    properties:
      id:
        type: integer
        format: int64
      tenantid:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
      email:
        type: string
      password:
        type: string
      status:
        type: string
      roles:
        type: array
        items:
          type: string
      totpEnabled:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      passwordChanged:
        type: boolean
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
  - {}
