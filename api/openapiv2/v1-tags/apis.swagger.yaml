swagger: "2.0"
info:
  title: pt backend
  version: "1.0"
  contact:
    name: pt backend audit log service
    url: https://pt-backend.rdeid.unil.ch
    email: development.bdsc@chuv.ch
tags:
  - name: AuditLogService
  - name: AuthenticationService
  - name: ConfigurationService
  - name: DatasetService
  - name: IndexService
  - name: QuestionnaireService
  - name: RiskAssessmentService
  - name: UsersService
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/rest/v1/authentication/login:
    post:
      summary: Authenticate
      description: This endpoint authenticates a user
      operationId: AuthenticationService_Authenticate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendAuthenticationReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendCredentials'
      tags:
        - AuthenticationService
      x-openapi-router-controller: authentication_controller
  /api/rest/v1/config/export/{id}:
    get:
      summary: Export a configuration as json (SPHN Connector format)
      description: This endpoint returns the JSON of a configuration
      operationId: ConfigurationService_ExportConfig
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendExportConfigReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - ConfigurationService
      x-openapi-router-controller: config_generator_controller
  /api/rest/v1/configs:
    get:
      summary: Get configuration files
      description: This endpoint returns the configuration files for a given user
      operationId: ConfigurationService_GetConfigs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetConfigsReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - ConfigurationService
      x-openapi-router-controller: config_generator_controller
    post:
      summary: Create a configuration
      description: This endpoint creates a usconfigurationer
      operationId: ConfigurationService_CreateConfig
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateConfigReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendConfig'
      tags:
        - ConfigurationService
      x-openapi-router-controller: config_generator_controller
  /api/rest/v1/users:
    post:
      summary: Create a user
      description: This endpoint creates a user
      operationId: UsersService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendUser'
      tags:
        - UsersService
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/me:
    get:
      summary: Get my own user
      description: This endpoint returns the details of the authenticated user
      operationId: UsersService_GetUserMe
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetUserMeReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - UsersService
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/me/password:
    put:
      summary: Update password
      description: This endpoint updates the password of the authenticated user
      operationId: UsersService_UpdatePassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendUpdatePasswordReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendUpdatePasswordRequest'
      tags:
        - UsersService
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/search:
    post:
      summary: Search users
      description: This endpoint searches for users
      operationId: UsersService_SearchUsers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendSearchUsersReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendSearchUsersRequest'
      tags:
        - UsersService
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/{id}:
    get:
      summary: Get a user
      description: This endpoint returns a user
      operationId: UsersService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - UsersService
      x-openapi-router-controller: user_controller
    delete:
      summary: Delete a user
      description: This endpoint deletes a user
      operationId: UsersService_DeleteUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendDeleteUserReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - UsersService
      x-openapi-router-controller: user_controller
  /api/rest/v1/users/{id}/password/reset:
    post:
      summary: Reset password
      description: This endpoint resets a user's password
      operationId: UsersService_ResetPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendResetPasswordReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            type: object
      tags:
        - UsersService
      x-openapi-router-controller: user_controller
  /api/v1/audit/logs:
    get:
      summary: Get logs
      description: Gets a list of logs.
      operationId: AuditLogService_GetLogs
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetLogsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: filters
          in: query
          required: false
          type: string
        - name: sortBy
          in: query
          required: false
          type: string
      tags:
        - AuditLogService
      x-openapi-router-controller: audit_log_controller
  /api/v1/audit/users/{userid}/logs:
    get:
      summary: Get logs for a user
      description: Gets logs for a specific user.
      operationId: AuditLogService_GetLogsForUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetLogsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: userid
          in: path
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: filters
          in: query
          required: false
          type: string
        - name: sortBy
          in: query
          required: false
          type: string
      tags:
        - AuditLogService
      x-openapi-router-controller: audit_log_controller
  /api/v1/config/{id}:
    delete:
      summary: Deletes a config
      description: This endpoint deletes a config
      operationId: ConfigurationService_DeleteConfig
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendDeleteConfigReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - ConfigurationService
      x-openapi-router-controller: config_generator_controller
  /api/v1/dataset:
    get:
      summary: List datasets
      description: This endpoint allows listing a user's datasets
      operationId: DatasetService_ListDatasets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendListDatasetsReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
        - name: limit
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
    post:
      summary: Store a dataset
      description: This endpoint stores a dataset
      operationId: DatasetService_StoreDataset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendStoreDatasetReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendStoreDatasetRequest'
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/content/{id}:
    get:
      summary: Get Dataset Content
      description: This endpoint allow getting a specific user's Dataset Content
      operationId: DatasetService_GetDatasetContent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetDatasetContentReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/dataframe/{id}:
    get:
      summary: Get Dataset Dataframe
      description: This endpoint allow getting a specific user's Dataset as a Pandas Dataframe in Parquet format
      operationId: DatasetService_GetDatasetDataframe
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/apiHttpBody'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/identifier/{id}:
    get:
      summary: Get Dataset Content filtered by identifying and quasi identifying columns
      description: This endpoint allow getting a specific user's Dataset Content filtered by identifying and quasi identifying columns
      operationId: DatasetService_GetDatasetIdentifier
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetDatasetContentReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/info/{id}:
    get:
      summary: Get Dataset Info
      description: This endpoint allow getting a specific user's Dataset info
      operationId: DatasetService_GetDatasetInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetDatasetInfoReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/jupyterhub/{id}:
    get:
      summary: Get Dataset Jupyterhub
      description: This endpoint allow getting a specific user's Dataset as a Jupyterhub link
      operationId: DatasetService_GetDatasetJupyterhub
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetDatasetJupyterhubReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/metadata/{id}:
    get:
      summary: Get Dataset Metadata
      description: This endpoint allow getting a specific user's Dataset Metadata
      operationId: DatasetService_GetDatasetMetadata
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetDatasetMetadataReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/revert:
    post:
      summary: Revert a dataset
      description: This endpoint reverts a dataset
      operationId: DatasetService_RevertDataset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendRevertDatasetReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendRevertDatasetRequest'
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/transform:
    post:
      summary: Transform a dataset
      description: This endpoint transforms a dataset
      operationId: DatasetService_TransformDataset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendTransformDatasetReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendTransformDatasetRequest'
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/types:
    post:
      summary: Change the types of a dataset
      description: This endpoint changes the types of a dataset
      operationId: DatasetService_ChangeTypesDataset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendChangeTypesDatasetReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendChangeTypesDatasetRequest'
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/dataset/{id}:
    delete:
      summary: Deletes a dataset
      description: This endpoint deletes a dataset
      operationId: DatasetService_DeleteDataset
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendDeleteDatasetReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - DatasetService
      x-openapi-router-controller: dataset_controller
  /api/v1/hello:
    get:
      summary: Get a hello
      description: This endpoint returns a hello
      operationId: IndexService_GetHello
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetHelloReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - IndexService
      x-openapi-router-controller: index_controller
  /api/v1/hello/{identifier}:
    post:
      summary: Get a hello
      description: This endpoint returns a hello
      operationId: IndexService_CreateHello
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateHelloReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: identifier
          in: path
          required: true
          type: integer
          format: int32
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              content:
                type: string
      tags:
        - IndexService
      x-openapi-router-controller: index_controller
  /api/v1/questionnaire:
    get:
      summary: List questionnaires
      description: This endpoint allows listing a user's questionnaires
      operationId: QuestionnaireService_ListQuestionnaire
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendListQuestionnaireReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
        - name: limit
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
    post:
      summary: Create a questionnaire
      description: This endpoint creates a questionnaire
      operationId: QuestionnaireService_CreateQuestionnaire
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateQuestionnaireReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendCreateQuestionnaireRequest'
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
  /api/v1/questionnaire/replies:
    get:
      summary: List questionnaires replies
      description: This endpoint allows listing a user's questionnaires replies
      operationId: QuestionnaireService_ListReplies
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendListRepliesReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: offset
          description: uint32 questionnaire_version_id = 1;
          in: query
          required: false
          type: integer
          format: int64
        - name: limit
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
    post:
      summary: Create questionnaires reply
      description: This endpoint allows ceating a user's questionnaires reply
      operationId: QuestionnaireService_CreateReply
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateReplyReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendCreateReplyRequest'
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
  /api/v1/questionnaire/replies/{id}:
    get:
      summary: Get a questionnaires reply
      description: This endpoint allows getting a user's questionnaires reply
      operationId: QuestionnaireService_GetReply
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetReplyReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          description: uint32 questionnaire_version_id = 1;
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
  /api/v1/questionnaire/replies/{id}/share:
    post:
      summary: Share questionnaires reply
      description: This endpoint allows sharing a user's questionnaires reply
      operationId: QuestionnaireService_ShareReply
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendShareReplyReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              sharedwithUserid:
                type: integer
                format: int64
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
  /api/v1/questionnaire/version:
    post:
      summary: Create a questionnaire version
      description: This endpoint creates a questionnaire version
      operationId: QuestionnaireService_CreateQuestionnaireVersion
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendCreateQuestionnaireVersionReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/templatebackendCreateQuestionnaireVersionRequest'
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
  /api/v1/questionnaire/{id}:
    get:
      summary: Get questionnaires
      description: This endpoint allow getting a single user's questionnaire
      operationId: QuestionnaireService_GetQuestionnaire
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetQuestionnaireReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
    delete:
      summary: Create a questionnaire
      description: This endpoint creates a questionnaire
      operationId: QuestionnaireService_DeleteQuestionnaire
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendDeleteQuestionnaireReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - QuestionnaireService
      x-openapi-router-controller: questionnaire_controller
  /api/v1/riskassessment/{datasetid}:
    get:
      summary: Get risk assessment
      description: This endpoint allow getting a single user's risk assessment
      operationId: RiskAssessmentService_GetRiskAssessment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/templatebackendGetRiskAssessmentReply'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: datasetid
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - RiskAssessmentService
      x-openapi-router-controller: risk_assessment_controller
definitions:
  apiHttpBody:
    type: object
    properties:
      contentType:
        type: string
        description: The HTTP Content-Type header value specifying the content type of the body.
      data:
        type: string
        format: byte
        description: The HTTP request/response body as raw binary.
      extensions:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
        description: |-
          Application specific response metadata. Must be set in the first response
          for streaming APIs.
    description: |-
      Message that represents an arbitrary HTTP body. It should only be used for
      payload formats that can't be represented as JSON, such as raw binary or
      an HTML page.


      This message can be used both in streaming and non-streaming API methods in
      the request as well as the response.

      It can be used as a top-level request field, which is convenient if one
      wants to extract parameters from either the URL or HTTP template into the
      request fields and also want access to the raw HTTP body.

      Example:

          message GetResourceRequest {
            // A unique request id.
            string request_id = 1;

            // The raw HTTP body is bound to this field.
            google.api.HttpBody http_body = 2;
          }

          service ResourceService {
            rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);
            rpc UpdateResource(google.api.HttpBody) returns
            (google.protobuf.Empty);
          }

      Example with streaming methods:

          service CaldavService {
            rpc GetCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);
            rpc UpdateCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);
          }

      Use of this type only changes how the request and response bodies are
      handled, all other features will continue to work unchanged.
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name whose content describes the type of the
          serialized protocol buffer message.

          For URLs which use the scheme `http`, `https`, or no scheme, the
          following restrictions and interpretations apply:

          * If no scheme is provided, `https` is assumed.
          * The last segment of the URL's path must represent the fully
            qualified name of the type (as in `path/google.protobuf.Duration`).
            The name should be in a canonical form (e.g., leading "." is
            not accepted).
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".


      JSON
      ====
      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  templatebackendAuditLog:
    type: object
    properties:
      id:
        type: integer
        format: int32
      userid:
        type: integer
        format: int32
      service:
        type: string
      action:
        type: string
      body:
        type: string
      response:
        type: string
      createdAt:
        type: string
        format: date-time
      error:
        type: boolean
      user:
        $ref: '#/definitions/templatebackendUser'
  templatebackendAuthenticationReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendAuthenticationResult'
  templatebackendAuthenticationResult:
    type: object
    properties:
      token:
        type: string
  templatebackendChangeTypesDatasetReply:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendChangeTypesDatasetRequest:
    type: object
    properties:
      datasetId:
        type: integer
        format: int64
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendMetadata'
  templatebackendColumn:
    type: object
    properties:
      value:
        type: array
        items:
          type: string
  templatebackendConfig:
    type: object
    properties:
      id:
        type: integer
        format: int64
      userid:
        type: integer
        format: int64
      tenantid:
        type: integer
        format: int64
      configName:
        type: string
      questionnaireid:
        type: integer
        format: int64
      hasScrambleField:
        type: boolean
      hasDateShift:
        type: boolean
      hassubFieldList:
        type: boolean
      hassubFieldRegex:
        type: boolean
      scrambleFieldFields:
        type: array
        items:
          type: string
      dateShiftLowrange:
        type: integer
        format: int32
      dateShiftHighrange:
        type: integer
        format: int32
      subFieldListField:
        type: string
      subFieldListSubstitute:
        type: array
        items:
          type: string
      subFieldListReplacement:
        type: string
      subFieldRegexField:
        type: string
      subFieldRegexRegex:
        type: string
      subFieldRegexReplacement:
        type: string
      createdAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
  templatebackendCreateConfigReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendCreateConfigResult'
  templatebackendCreateConfigResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendCreateHelloReply:
    type: object
    properties:
      identifier:
        type: integer
        format: int32
      title:
        type: string
      content:
        type: string
  templatebackendCreateQuestionnaireReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendCreateQuestionnaireResult'
  templatebackendCreateQuestionnaireRequest:
    type: object
    properties:
      questionnaire:
        $ref: '#/definitions/templatebackendQuestionnaire'
    title: Message definitions for requests and responses
  templatebackendCreateQuestionnaireResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendCreateQuestionnaireVersionReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendCreateQuestionnaireVersionResult'
  templatebackendCreateQuestionnaireVersionRequest:
    type: object
    properties:
      id:
        type: integer
        format: int64
      version:
        $ref: '#/definitions/templatebackendQuestionnaireVersion'
    title: Message definitions for requests and responses
  templatebackendCreateQuestionnaireVersionResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendCreateReplyReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendCreateReplyResult'
  templatebackendCreateReplyRequest:
    type: object
    properties:
      reply:
        $ref: '#/definitions/templatebackendQuestionnaireReply'
  templatebackendCreateReplyResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendCreateUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendCreateUserResult'
    title: Create Users
  templatebackendCreateUserResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendCredentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      totp:
        type: string
  templatebackendDataset:
    type: object
    properties:
      id:
        type: integer
        format: int64
      userid:
        type: integer
        format: int64
      tenantid:
        type: integer
        format: int64
      datasetName:
        type: string
      createdAt:
        type: string
        format: date-time
      deletedAt:
        type: string
        format: date-time
  templatebackendDeleteConfigReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendDeleteConfigResult'
  templatebackendDeleteConfigResult:
    type: object
    properties:
      success:
        type: boolean
  templatebackendDeleteDatasetReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendDeleteDatasetResult'
  templatebackendDeleteDatasetResult:
    type: object
    properties:
      success:
        type: boolean
  templatebackendDeleteQuestionnaireReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendDeleteQuestionnaireResult'
  templatebackendDeleteQuestionnaireResult:
    type: object
    properties:
      success:
        type: boolean
  templatebackendDeleteUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendDeleteUserResult'
  templatebackendDeleteUserResult:
    type: object
  templatebackendExportConfigReply:
    type: object
    properties:
      config:
        type: string
  templatebackendGetConfigsReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetConfigsResult'
  templatebackendGetConfigsResult:
    type: object
    properties:
      config:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendConfig'
  templatebackendGetDatasetContentReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetDatasetContentResult'
  templatebackendGetDatasetContentResult:
    type: object
    properties:
      columns:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendColumn'
      nRows:
        type: integer
        format: int64
  templatebackendGetDatasetInfoReply:
    type: object
    properties:
      dataset:
        $ref: '#/definitions/templatebackendDataset'
  templatebackendGetDatasetJupyterhubReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetDatasetJupyterhubResult'
  templatebackendGetDatasetJupyterhubResult:
    type: object
    properties:
      url:
        type: string
  templatebackendGetDatasetMetadataReply:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/templatebackendGetDatasetMetadataResult'
  templatebackendGetDatasetMetadataResult:
    type: object
    properties:
      metadata:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendMetadata'
  templatebackendGetHelloReply:
    type: object
    properties:
      content:
        type: string
  templatebackendGetLogsResponse:
    type: object
    properties:
      logs:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendAuditLog'
  templatebackendGetQuestionnaireReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetQuestionnaireResult'
  templatebackendGetQuestionnaireResult:
    type: object
    properties:
      questionnaire:
        $ref: '#/definitions/templatebackendQuestionnaire'
  templatebackendGetReplyReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetReplyResult'
  templatebackendGetReplyResult:
    type: object
    properties:
      reply:
        $ref: '#/definitions/templatebackendQuestionnaireReply'
  templatebackendGetRiskAssessmentReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetRiskAssessmentResult'
  templatebackendGetRiskAssessmentResult:
    type: object
    properties:
      RiskAssessment:
        type: array
        items:
          type: string
  templatebackendGetUserMeReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetUserMeResult'
  templatebackendGetUserMeResult:
    type: object
    properties:
      me:
        $ref: '#/definitions/templatebackendUser'
    title: Get User (me)
  templatebackendGetUserReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendGetUserResult'
  templatebackendGetUserResult:
    type: object
    properties:
      user:
        $ref: '#/definitions/templatebackendUser'
  templatebackendListDatasetsReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendListDatasetsResult'
  templatebackendListDatasetsResult:
    type: object
    properties:
      Datasets:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendDataset'
  templatebackendListQuestionnaireReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendListQuestionnaireResult'
  templatebackendListQuestionnaireResult:
    type: object
    properties:
      questionnaires:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendQuestionnaire'
  templatebackendListRepliesReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendListRepliesResult'
  templatebackendListRepliesResult:
    type: object
    properties:
      replies:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendQuestionnaireReply'
  templatebackendMetadata:
    type: object
    properties:
      userid:
        type: integer
        format: int64
      tenantid:
        type: integer
        format: int64
      datasetId:
        type: integer
        format: int64
      columnId:
        type: integer
        format: int64
      columnName:
        type: string
      type:
        type: string
      identifier:
        type: string
      isId:
        type: boolean
  templatebackendQuestionnaire:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      replyEditable:
        type: boolean
      lastVersion:
        type: string
      versions:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendQuestionnaireVersion'
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
        title: google.protobuf.Timestamp deletedAt = 7;
  templatebackendQuestionnaireQuestion:
    type: object
    properties:
      id:
        type: integer
        format: int64
      tab:
        type: string
      question:
        type: string
      riskWeight:
        type: integer
        format: int64
      answerType:
        type: string
      flag:
        type: string
      tooltip:
        type: string
      answers:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendQuestionnaireQuestionAnswer'
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
        title: google.protobuf.Timestamp deletedAt = 11;
  templatebackendQuestionnaireQuestionAnswer:
    type: object
    properties:
      id:
        type: integer
        format: int64
      text:
        type: string
      riskLevel:
        type: integer
        format: int64
      highRisk:
        type: boolean
      rulePrefills:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendQuestionnaireQuestionAnswerRulePrefill'
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
        title: google.protobuf.Timestamp deletedAt = 8;
  templatebackendQuestionnaireQuestionAnswerRulePrefill:
    type: object
    properties:
      id:
        type: integer
        format: int64
      questionId:
        type: integer
        format: int64
      answerId:
        type: integer
        format: int64
      answerText:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
        title: google.protobuf.Timestamp deletedAt = 7;
  templatebackendQuestionnaireQuestionReply:
    type: object
    properties:
      id:
        type: integer
        format: int64
      questionnaireQuestionId:
        type: integer
        format: int64
      answer:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
        title: google.protobuf.Timestamp deletedAt = 7;
  templatebackendQuestionnaireReply:
    type: object
    properties:
      id:
        type: integer
        format: int64
      questionnaireVersionId:
        type: integer
        format: int64
      projectName:
        type: string
      replies:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendQuestionnaireQuestionReply'
      userId:
        type: integer
        format: int64
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
        title: google.protobuf.Timestamp deletedAt = 11;
  templatebackendQuestionnaireVersion:
    type: object
    properties:
      id:
        type: integer
        format: int64
      version:
        type: string
      questions:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendQuestionnaireQuestion'
      published:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
        title: google.protobuf.Timestamp deletedAt = 6;
  templatebackendResetPasswordReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendResetPasswordResult'
  templatebackendResetPasswordResult:
    type: object
  templatebackendRevertDatasetReply:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendRevertDatasetRequest:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendSearchUsersReply:
    type: object
    properties:
      result:
        type: array
        items:
          type: object
          $ref: '#/definitions/templatebackendUserEmail'
  templatebackendSearchUsersRequest:
    type: object
    properties:
      emailLike:
        type: string
  templatebackendShareReplyReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendShareReplyResult'
  templatebackendShareReplyResult:
    type: object
    properties:
      success:
        type: boolean
  templatebackendStoreDatasetReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendStoreDatasetResult'
  templatebackendStoreDatasetRequest:
    type: object
    properties:
      datasetName:
        type: string
      dataset:
        type: string
      types:
        type: string
      identifiers:
        type: string
      isId:
        type: string
    title: Create a Dataset
  templatebackendStoreDatasetResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendTransformDatasetReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendTransformDatasetResult'
  templatebackendTransformDatasetRequest:
    type: object
    properties:
      datasetId:
        type: integer
        format: int64
      configId:
        type: integer
        format: int64
  templatebackendTransformDatasetResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
  templatebackendUpdatePasswordReply:
    type: object
    properties:
      result:
        $ref: '#/definitions/templatebackendUpdateUserResult'
  templatebackendUpdatePasswordRequest:
    type: object
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    title: Update User Password
  templatebackendUpdateUserResult:
    type: object
  templatebackendUser:
    type: object
    properties:
      id:
        type: integer
        format: int64
      tenantid:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
      email:
        type: string
      password:
        type: string
      status:
        type: string
      roles:
        type: array
        items:
          type: string
      totpEnabled:
        type: boolean
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      passwordChanged:
        type: boolean
  templatebackendUserEmail:
    type: object
    properties:
      id:
        type: integer
        format: int64
      email:
        type: string
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
  - {}
