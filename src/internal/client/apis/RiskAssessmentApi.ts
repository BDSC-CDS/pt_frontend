/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RpcStatus,
  TemplatebackendGetRiskAssessmentReply,
} from '../models/index';
import {
    RpcStatusFromJSON,
    RpcStatusToJSON,
    TemplatebackendGetRiskAssessmentReplyFromJSON,
    TemplatebackendGetRiskAssessmentReplyToJSON,
} from '../models/index';

export interface RiskAssessmentServiceGetRiskAssessmentRequest {
    datasetid: number;
}

/**
 * 
 */
export class RiskAssessmentApi extends runtime.BaseAPI {

    /**
     * This endpoint allow getting a single user\'s risk assessment
     * Get risk assessment
     */
    async riskAssessmentServiceGetRiskAssessmentRaw(requestParameters: RiskAssessmentServiceGetRiskAssessmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplatebackendGetRiskAssessmentReply>> {
        if (requestParameters.datasetid === null || requestParameters.datasetid === undefined) {
            throw new runtime.RequiredError('datasetid','Required parameter requestParameters.datasetid was null or undefined when calling riskAssessmentServiceGetRiskAssessment.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/v1/riskassessment/{datasetid}`.replace(`{${"datasetid"}}`, encodeURIComponent(String(requestParameters.datasetid))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TemplatebackendGetRiskAssessmentReplyFromJSON(jsonValue));
    }

    /**
     * This endpoint allow getting a single user\'s risk assessment
     * Get risk assessment
     */
    async riskAssessmentServiceGetRiskAssessment(requestParameters: RiskAssessmentServiceGetRiskAssessmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplatebackendGetRiskAssessmentReply> {
        const response = await this.riskAssessmentServiceGetRiskAssessmentRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
