/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendDataset } from './TemplatebackendDataset';
import {
    TemplatebackendDatasetFromJSON,
    TemplatebackendDatasetFromJSONTyped,
    TemplatebackendDatasetToJSON,
} from './TemplatebackendDataset';

/**
 * 
 * @export
 * @interface TemplatebackendListDatasetsResult
 */
export interface TemplatebackendListDatasetsResult {
    /**
     * 
     * @type {Array<TemplatebackendDataset>}
     * @memberof TemplatebackendListDatasetsResult
     */
    datasets?: Array<TemplatebackendDataset>;
}

/**
 * Check if a given object implements the TemplatebackendListDatasetsResult interface.
 */
export function instanceOfTemplatebackendListDatasetsResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendListDatasetsResultFromJSON(json: any): TemplatebackendListDatasetsResult {
    return TemplatebackendListDatasetsResultFromJSONTyped(json, false);
}

export function TemplatebackendListDatasetsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendListDatasetsResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'datasets': !exists(json, 'Datasets') ? undefined : ((json['Datasets'] as Array<any>).map(TemplatebackendDatasetFromJSON)),
    };
}

export function TemplatebackendListDatasetsResultToJSON(value?: TemplatebackendListDatasetsResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Datasets': value.datasets === undefined ? undefined : ((value.datasets as Array<any>).map(TemplatebackendDatasetToJSON)),
    };
}

