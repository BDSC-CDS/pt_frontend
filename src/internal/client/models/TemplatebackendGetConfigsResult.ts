/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendConfig } from './TemplatebackendConfig';
import {
    TemplatebackendConfigFromJSON,
    TemplatebackendConfigFromJSONTyped,
    TemplatebackendConfigToJSON,
} from './TemplatebackendConfig';

/**
 * 
 * @export
 * @interface TemplatebackendGetConfigsResult
 */
export interface TemplatebackendGetConfigsResult {
    /**
     * 
     * @type {Array<TemplatebackendConfig>}
     * @memberof TemplatebackendGetConfigsResult
     */
    config?: Array<TemplatebackendConfig>;
}

/**
 * Check if a given object implements the TemplatebackendGetConfigsResult interface.
 */
export function instanceOfTemplatebackendGetConfigsResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendGetConfigsResultFromJSON(json: any): TemplatebackendGetConfigsResult {
    return TemplatebackendGetConfigsResultFromJSONTyped(json, false);
}

export function TemplatebackendGetConfigsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendGetConfigsResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'config': !exists(json, 'config') ? undefined : ((json['config'] as Array<any>).map(TemplatebackendConfigFromJSON)),
    };
}

export function TemplatebackendGetConfigsResultToJSON(value?: TemplatebackendGetConfigsResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'config': value.config === undefined ? undefined : ((value.config as Array<any>).map(TemplatebackendConfigToJSON)),
    };
}

