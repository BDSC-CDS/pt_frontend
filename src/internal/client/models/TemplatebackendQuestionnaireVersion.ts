/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendQuestionnaireQuestion } from './TemplatebackendQuestionnaireQuestion';
import {
    TemplatebackendQuestionnaireQuestionFromJSON,
    TemplatebackendQuestionnaireQuestionFromJSONTyped,
    TemplatebackendQuestionnaireQuestionToJSON,
} from './TemplatebackendQuestionnaireQuestion';

/**
 * 
 * @export
 * @interface TemplatebackendQuestionnaireVersion
 */
export interface TemplatebackendQuestionnaireVersion {
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendQuestionnaireVersion
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendQuestionnaireVersion
     */
    version?: string;
    /**
     * 
     * @type {Array<TemplatebackendQuestionnaireQuestion>}
     * @memberof TemplatebackendQuestionnaireVersion
     */
    questions?: Array<TemplatebackendQuestionnaireQuestion>;
    /**
     * 
     * @type {Date}
     * @memberof TemplatebackendQuestionnaireVersion
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TemplatebackendQuestionnaireVersion
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the TemplatebackendQuestionnaireVersion interface.
 */
export function instanceOfTemplatebackendQuestionnaireVersion(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendQuestionnaireVersionFromJSON(json: any): TemplatebackendQuestionnaireVersion {
    return TemplatebackendQuestionnaireVersionFromJSONTyped(json, false);
}

export function TemplatebackendQuestionnaireVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendQuestionnaireVersion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'questions': !exists(json, 'questions') ? undefined : ((json['questions'] as Array<any>).map(TemplatebackendQuestionnaireQuestionFromJSON)),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function TemplatebackendQuestionnaireVersionToJSON(value?: TemplatebackendQuestionnaireVersion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'version': value.version,
        'questions': value.questions === undefined ? undefined : ((value.questions as Array<any>).map(TemplatebackendQuestionnaireQuestionToJSON)),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

