/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TemplatebackendAuditLog
 */
export interface TemplatebackendAuditLog {
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendAuditLog
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendAuditLog
     */
    userid?: number;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendAuditLog
     */
    service?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendAuditLog
     */
    action?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendAuditLog
     */
    body?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendAuditLog
     */
    response?: string;
    /**
     * 
     * @type {Date}
     * @memberof TemplatebackendAuditLog
     */
    createdAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof TemplatebackendAuditLog
     */
    error?: boolean;
}

/**
 * Check if a given object implements the TemplatebackendAuditLog interface.
 */
export function instanceOfTemplatebackendAuditLog(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendAuditLogFromJSON(json: any): TemplatebackendAuditLog {
    return TemplatebackendAuditLogFromJSONTyped(json, false);
}

export function TemplatebackendAuditLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendAuditLog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userid': !exists(json, 'userid') ? undefined : json['userid'],
        'service': !exists(json, 'service') ? undefined : json['service'],
        'action': !exists(json, 'action') ? undefined : json['action'],
        'body': !exists(json, 'body') ? undefined : json['body'],
        'response': !exists(json, 'response') ? undefined : json['response'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'error': !exists(json, 'error') ? undefined : json['error'],
    };
}

export function TemplatebackendAuditLogToJSON(value?: TemplatebackendAuditLog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userid': value.userid,
        'service': value.service,
        'action': value.action,
        'body': value.body,
        'response': value.response,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'error': value.error,
    };
}

