/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TemplatebackendStoreDatasetRequest
 */
export interface TemplatebackendStoreDatasetRequest {
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendStoreDatasetRequest
     */
    datasetName?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendStoreDatasetRequest
     */
    dataset?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendStoreDatasetRequest
     */
    types?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendStoreDatasetRequest
     */
    identifiers?: string;
}

/**
 * Check if a given object implements the TemplatebackendStoreDatasetRequest interface.
 */
export function instanceOfTemplatebackendStoreDatasetRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendStoreDatasetRequestFromJSON(json: any): TemplatebackendStoreDatasetRequest {
    return TemplatebackendStoreDatasetRequestFromJSONTyped(json, false);
}

export function TemplatebackendStoreDatasetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendStoreDatasetRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'datasetName': !exists(json, 'datasetName') ? undefined : json['datasetName'],
        'dataset': !exists(json, 'dataset') ? undefined : json['dataset'],
        'types': !exists(json, 'types') ? undefined : json['types'],
        'identifiers': !exists(json, 'identifiers') ? undefined : json['identifiers'],
    };
}

export function TemplatebackendStoreDatasetRequestToJSON(value?: TemplatebackendStoreDatasetRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'datasetName': value.datasetName,
        'dataset': value.dataset,
        'types': value.types,
        'identifiers': value.identifiers,
    };
}

