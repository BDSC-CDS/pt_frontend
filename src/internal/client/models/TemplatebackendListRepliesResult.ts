/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendQuestionnaireReply } from './TemplatebackendQuestionnaireReply';
import {
    TemplatebackendQuestionnaireReplyFromJSON,
    TemplatebackendQuestionnaireReplyFromJSONTyped,
    TemplatebackendQuestionnaireReplyToJSON,
} from './TemplatebackendQuestionnaireReply';

/**
 * 
 * @export
 * @interface TemplatebackendListRepliesResult
 */
export interface TemplatebackendListRepliesResult {
    /**
     * 
     * @type {Array<TemplatebackendQuestionnaireReply>}
     * @memberof TemplatebackendListRepliesResult
     */
    replies?: Array<TemplatebackendQuestionnaireReply>;
}

/**
 * Check if a given object implements the TemplatebackendListRepliesResult interface.
 */
export function instanceOfTemplatebackendListRepliesResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendListRepliesResultFromJSON(json: any): TemplatebackendListRepliesResult {
    return TemplatebackendListRepliesResultFromJSONTyped(json, false);
}

export function TemplatebackendListRepliesResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendListRepliesResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'replies': !exists(json, 'replies') ? undefined : ((json['replies'] as Array<any>).map(TemplatebackendQuestionnaireReplyFromJSON)),
    };
}

export function TemplatebackendListRepliesResultToJSON(value?: TemplatebackendListRepliesResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'replies': value.replies === undefined ? undefined : ((value.replies as Array<any>).map(TemplatebackendQuestionnaireReplyToJSON)),
    };
}

