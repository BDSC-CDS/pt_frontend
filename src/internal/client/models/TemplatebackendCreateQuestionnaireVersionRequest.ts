/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendQuestionnaireVersion } from './TemplatebackendQuestionnaireVersion';
import {
    TemplatebackendQuestionnaireVersionFromJSON,
    TemplatebackendQuestionnaireVersionFromJSONTyped,
    TemplatebackendQuestionnaireVersionToJSON,
} from './TemplatebackendQuestionnaireVersion';

/**
 * 
 * @export
 * @interface TemplatebackendCreateQuestionnaireVersionRequest
 */
export interface TemplatebackendCreateQuestionnaireVersionRequest {
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendCreateQuestionnaireVersionRequest
     */
    id?: number;
    /**
     * 
     * @type {TemplatebackendQuestionnaireVersion}
     * @memberof TemplatebackendCreateQuestionnaireVersionRequest
     */
    version?: TemplatebackendQuestionnaireVersion;
}

/**
 * Check if a given object implements the TemplatebackendCreateQuestionnaireVersionRequest interface.
 */
export function instanceOfTemplatebackendCreateQuestionnaireVersionRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendCreateQuestionnaireVersionRequestFromJSON(json: any): TemplatebackendCreateQuestionnaireVersionRequest {
    return TemplatebackendCreateQuestionnaireVersionRequestFromJSONTyped(json, false);
}

export function TemplatebackendCreateQuestionnaireVersionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendCreateQuestionnaireVersionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': !exists(json, 'version') ? undefined : TemplatebackendQuestionnaireVersionFromJSON(json['version']),
    };
}

export function TemplatebackendCreateQuestionnaireVersionRequestToJSON(value?: TemplatebackendCreateQuestionnaireVersionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'version': TemplatebackendQuestionnaireVersionToJSON(value.version),
    };
}

