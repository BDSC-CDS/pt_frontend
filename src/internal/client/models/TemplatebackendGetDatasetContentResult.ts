/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendColumn } from './TemplatebackendColumn';
import {
    TemplatebackendColumnFromJSON,
    TemplatebackendColumnFromJSONTyped,
    TemplatebackendColumnToJSON,
} from './TemplatebackendColumn';

/**
 * 
 * @export
 * @interface TemplatebackendGetDatasetContentResult
 */
export interface TemplatebackendGetDatasetContentResult {
    /**
     * 
     * @type {Array<TemplatebackendColumn>}
     * @memberof TemplatebackendGetDatasetContentResult
     */
    columns?: Array<TemplatebackendColumn>;
}

/**
 * Check if a given object implements the TemplatebackendGetDatasetContentResult interface.
 */
export function instanceOfTemplatebackendGetDatasetContentResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendGetDatasetContentResultFromJSON(json: any): TemplatebackendGetDatasetContentResult {
    return TemplatebackendGetDatasetContentResultFromJSONTyped(json, false);
}

export function TemplatebackendGetDatasetContentResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendGetDatasetContentResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'columns': !exists(json, 'columns') ? undefined : ((json['columns'] as Array<any>).map(TemplatebackendColumnFromJSON)),
    };
}

export function TemplatebackendGetDatasetContentResultToJSON(value?: TemplatebackendGetDatasetContentResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'columns': value.columns === undefined ? undefined : ((value.columns as Array<any>).map(TemplatebackendColumnToJSON)),
    };
}

