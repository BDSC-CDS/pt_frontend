/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TemplatebackendConfig
 */
export interface TemplatebackendConfig {
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendConfig
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendConfig
     */
    questionnaireid?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TemplatebackendConfig
     */
    hasScrambleField?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TemplatebackendConfig
     */
    hasDateShift?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TemplatebackendConfig
     */
    hassubFieldList?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TemplatebackendConfig
     */
    hassubFieldRegex?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof TemplatebackendConfig
     */
    scrambleFieldFields?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendConfig
     */
    dateShiftLowrange?: number;
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendConfig
     */
    dateShiftHighrange?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof TemplatebackendConfig
     */
    subFieldListFields?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TemplatebackendConfig
     */
    subFieldListSubstitute?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendConfig
     */
    subFieldListReplacement?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof TemplatebackendConfig
     */
    subFieldRegexFields?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendConfig
     */
    subFieldRegexRegex?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendConfig
     */
    subFieldRegexReplacement?: string;
    /**
     * 
     * @type {Date}
     * @memberof TemplatebackendConfig
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the TemplatebackendConfig interface.
 */
export function instanceOfTemplatebackendConfig(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendConfigFromJSON(json: any): TemplatebackendConfig {
    return TemplatebackendConfigFromJSONTyped(json, false);
}

export function TemplatebackendConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'questionnaireid': !exists(json, 'questionnaireid') ? undefined : json['questionnaireid'],
        'hasScrambleField': !exists(json, 'hasScrambleField') ? undefined : json['hasScrambleField'],
        'hasDateShift': !exists(json, 'hasDateShift') ? undefined : json['hasDateShift'],
        'hassubFieldList': !exists(json, 'hassubFieldList') ? undefined : json['hassubFieldList'],
        'hassubFieldRegex': !exists(json, 'hassubFieldRegex') ? undefined : json['hassubFieldRegex'],
        'scrambleFieldFields': !exists(json, 'scrambleFieldFields') ? undefined : json['scrambleFieldFields'],
        'dateShiftLowrange': !exists(json, 'dateShiftLowrange') ? undefined : json['dateShiftLowrange'],
        'dateShiftHighrange': !exists(json, 'dateShiftHighrange') ? undefined : json['dateShiftHighrange'],
        'subFieldListFields': !exists(json, 'subFieldListFields') ? undefined : json['subFieldListFields'],
        'subFieldListSubstitute': !exists(json, 'subFieldListSubstitute') ? undefined : json['subFieldListSubstitute'],
        'subFieldListReplacement': !exists(json, 'subFieldListReplacement') ? undefined : json['subFieldListReplacement'],
        'subFieldRegexFields': !exists(json, 'subFieldRegexFields') ? undefined : json['subFieldRegexFields'],
        'subFieldRegexRegex': !exists(json, 'subFieldRegexRegex') ? undefined : json['subFieldRegexRegex'],
        'subFieldRegexReplacement': !exists(json, 'subFieldRegexReplacement') ? undefined : json['subFieldRegexReplacement'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
    };
}

export function TemplatebackendConfigToJSON(value?: TemplatebackendConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'questionnaireid': value.questionnaireid,
        'hasScrambleField': value.hasScrambleField,
        'hasDateShift': value.hasDateShift,
        'hassubFieldList': value.hassubFieldList,
        'hassubFieldRegex': value.hassubFieldRegex,
        'scrambleFieldFields': value.scrambleFieldFields,
        'dateShiftLowrange': value.dateShiftLowrange,
        'dateShiftHighrange': value.dateShiftHighrange,
        'subFieldListFields': value.subFieldListFields,
        'subFieldListSubstitute': value.subFieldListSubstitute,
        'subFieldListReplacement': value.subFieldListReplacement,
        'subFieldRegexFields': value.subFieldRegexFields,
        'subFieldRegexRegex': value.subFieldRegexRegex,
        'subFieldRegexReplacement': value.subFieldRegexReplacement,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
    };
}

