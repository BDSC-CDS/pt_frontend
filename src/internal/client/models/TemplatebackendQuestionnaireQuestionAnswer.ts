/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendQuestionnaireQuestionAnswerRulePrefill } from './TemplatebackendQuestionnaireQuestionAnswerRulePrefill';
import {
    TemplatebackendQuestionnaireQuestionAnswerRulePrefillFromJSON,
    TemplatebackendQuestionnaireQuestionAnswerRulePrefillFromJSONTyped,
    TemplatebackendQuestionnaireQuestionAnswerRulePrefillToJSON,
} from './TemplatebackendQuestionnaireQuestionAnswerRulePrefill';

/**
 * 
 * @export
 * @interface TemplatebackendQuestionnaireQuestionAnswer
 */
export interface TemplatebackendQuestionnaireQuestionAnswer {
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    text?: string;
    /**
     * 
     * @type {number}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    riskLevel?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    highRisk?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    tmpUUID?: string;
    /**
     * 
     * @type {string}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    jSONConfiguration?: string;
    /**
     * 
     * @type {Array<TemplatebackendQuestionnaireQuestionAnswerRulePrefill>}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    rulePrefills?: Array<TemplatebackendQuestionnaireQuestionAnswerRulePrefill>;
    /**
     * 
     * @type {Date}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TemplatebackendQuestionnaireQuestionAnswer
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the TemplatebackendQuestionnaireQuestionAnswer interface.
 */
export function instanceOfTemplatebackendQuestionnaireQuestionAnswer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendQuestionnaireQuestionAnswerFromJSON(json: any): TemplatebackendQuestionnaireQuestionAnswer {
    return TemplatebackendQuestionnaireQuestionAnswerFromJSONTyped(json, false);
}

export function TemplatebackendQuestionnaireQuestionAnswerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendQuestionnaireQuestionAnswer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'riskLevel': !exists(json, 'riskLevel') ? undefined : json['riskLevel'],
        'highRisk': !exists(json, 'highRisk') ? undefined : json['highRisk'],
        'tmpUUID': !exists(json, 'tmpUUID') ? undefined : json['tmpUUID'],
        'jSONConfiguration': !exists(json, 'JSONConfiguration') ? undefined : json['JSONConfiguration'],
        'rulePrefills': !exists(json, 'rulePrefills') ? undefined : ((json['rulePrefills'] as Array<any>).map(TemplatebackendQuestionnaireQuestionAnswerRulePrefillFromJSON)),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function TemplatebackendQuestionnaireQuestionAnswerToJSON(value?: TemplatebackendQuestionnaireQuestionAnswer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'text': value.text,
        'riskLevel': value.riskLevel,
        'highRisk': value.highRisk,
        'tmpUUID': value.tmpUUID,
        'JSONConfiguration': value.jSONConfiguration,
        'rulePrefills': value.rulePrefills === undefined ? undefined : ((value.rulePrefills as Array<any>).map(TemplatebackendQuestionnaireQuestionAnswerRulePrefillToJSON)),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

