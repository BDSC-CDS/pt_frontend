/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendAuditLog } from './TemplatebackendAuditLog';
import {
    TemplatebackendAuditLogFromJSON,
    TemplatebackendAuditLogFromJSONTyped,
    TemplatebackendAuditLogToJSON,
} from './TemplatebackendAuditLog';

/**
 * 
 * @export
 * @interface TemplatebackendGetLogsResponse
 */
export interface TemplatebackendGetLogsResponse {
    /**
     * 
     * @type {Array<TemplatebackendAuditLog>}
     * @memberof TemplatebackendGetLogsResponse
     */
    logs?: Array<TemplatebackendAuditLog>;
}

/**
 * Check if a given object implements the TemplatebackendGetLogsResponse interface.
 */
export function instanceOfTemplatebackendGetLogsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendGetLogsResponseFromJSON(json: any): TemplatebackendGetLogsResponse {
    return TemplatebackendGetLogsResponseFromJSONTyped(json, false);
}

export function TemplatebackendGetLogsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendGetLogsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'logs': !exists(json, 'logs') ? undefined : ((json['logs'] as Array<any>).map(TemplatebackendAuditLogFromJSON)),
    };
}

export function TemplatebackendGetLogsResponseToJSON(value?: TemplatebackendGetLogsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'logs': value.logs === undefined ? undefined : ((value.logs as Array<any>).map(TemplatebackendAuditLogToJSON)),
    };
}

