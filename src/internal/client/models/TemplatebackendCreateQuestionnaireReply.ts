/* tslint:disable */
/* eslint-disable */
/**
 * pt backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: development.bdsc@chuv.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TemplatebackendCreateQuestionnaireResult } from './TemplatebackendCreateQuestionnaireResult';
import {
    TemplatebackendCreateQuestionnaireResultFromJSON,
    TemplatebackendCreateQuestionnaireResultFromJSONTyped,
    TemplatebackendCreateQuestionnaireResultToJSON,
} from './TemplatebackendCreateQuestionnaireResult';

/**
 * 
 * @export
 * @interface TemplatebackendCreateQuestionnaireReply
 */
export interface TemplatebackendCreateQuestionnaireReply {
    /**
     * 
     * @type {TemplatebackendCreateQuestionnaireResult}
     * @memberof TemplatebackendCreateQuestionnaireReply
     */
    result?: TemplatebackendCreateQuestionnaireResult;
}

/**
 * Check if a given object implements the TemplatebackendCreateQuestionnaireReply interface.
 */
export function instanceOfTemplatebackendCreateQuestionnaireReply(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TemplatebackendCreateQuestionnaireReplyFromJSON(json: any): TemplatebackendCreateQuestionnaireReply {
    return TemplatebackendCreateQuestionnaireReplyFromJSONTyped(json, false);
}

export function TemplatebackendCreateQuestionnaireReplyFromJSONTyped(json: any, ignoreDiscriminator: boolean): TemplatebackendCreateQuestionnaireReply {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'result': !exists(json, 'result') ? undefined : TemplatebackendCreateQuestionnaireResultFromJSON(json['result']),
    };
}

export function TemplatebackendCreateQuestionnaireReplyToJSON(value?: TemplatebackendCreateQuestionnaireReply | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'result': TemplatebackendCreateQuestionnaireResultToJSON(value.result),
    };
}

